package ProjectGG;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class parabola2 extends JPanel implements Runnable {

   int angle = 5;
   int angle_vel = 1;
   int power = 0;
   int power_vel = 1;
   int step = 0;// 상태

   double xd = 0.01;
   double yd = 0.5;
   Image img;
   double ballx;
   double bally;
   double ballvelx;
   double ballvely;
   double gravity = 0.03d;// 중력

   
   public parabola() {
      addKeyListener(new KeyAdapter() {

         @Override
         public void keyPressed(KeyEvent e) {
            step++;// 키를 누룰때 마다 상태가 바뀜
            if (step == 3)// 각도와 힘으로 공 움직이기
            {
               ballx = 50;
               bally = 430;// 공의 초기위치
               ballvelx = (power * Math.cos(angle * (Math.PI / 180))) * 0.05;
               ballvely = -(power * Math.sin(angle * (Math.PI / 180))) * 0.05;
            }
            if (step == 4)// 4가 되면 처음 부터
               step = 0;
         }
      });

      Thread t = new Thread(this);// 게임 루프
      t.start();

   }

   public void Process() {
      switch (step) {

      case 1:// 스탭1 이면 각도 선택

         angle += angle_vel;

         if (angle > 80 || angle < 5) {
            angle_vel *= -1;
         }
         break;

      case 2:// 스탭2 이면 파워 선택

         power += power_vel;
         if (power > 99 || power < 1) {
            power_vel *= -1;
         }

         break;

      case 3:// 스탭3 이면 각도와 힘으로 공 포불선 움직임
         ballx += ballvelx;
         bally += ballvely;
         ballvely += gravity;// 중력 값을 더해줌

         if (bally > 430 && ballvely > 0) {
            ballvely = -(ballvely * 0.9)/1.5;
            ballvelx = (ballvelx * 0.9);
         }
         
         break;

      }
   }// case



   @Override
   protected void paintComponent(Graphics g) {
      g.clearRect(0, 0, getWidth(), getHeight());
//      img = new Image
      switch (step) {

      case 1:
         g.setColor(Color.red);
         g.fillArc(50, 50, 100, 100, 5, angle);

         break;

      case 2:
         g.setColor(Color.red);
         g.fillRect(50, 50, 50, -power);
         g.setColor(Color.ORANGE);
         g.fillArc(50, 50, 100, 100, 5, power);

         break;

      case 3:

         g.setColor(Color.orange);
         g.fillRect(50, 50, 50, -power);
         g.setColor(Color.red);
         g.fillArc(50, 50, 100, 100, 5, power);
//         g.setColor(Color.black);
//         g.drawImage(img, x, y, width, height, bgcolor, observer);
         g.fillOval((int) ballx - 5, (int) bally - 5, 10, 10);

         break;
      }
   }

   @Override
   public void run() {
      while (true) {
         try {
            Process();
            repaint();
            Thread.sleep(7);
         } catch (Exception ex) {
         }
      }
   }

   public static void main(String[] args) {

      JFrame f = new JFrame();
      parabola t = new parabola();
      f.getContentPane().add(t);

      f.setSize(1000, 600);
      f.setVisible(true);
      f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

      t.requestFocus();
   }
}